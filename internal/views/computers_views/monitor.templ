package computers_views

import (
	"fmt"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/labstack/echo/v4"
	ent "github.com/ahmetkarakayaoffical/ent"
	"github.com/ahmetkarakayaoffical/scnorionplus-console/internal/views/partials"
)

templ Monitors(c echo.Context, p partials.PaginationAndSort, agent *ent.Agent, confirmDelete bool, commonInfo *partials.CommonInfo) {
	@partials.ComputerBreadcrumb(c, agent, commonInfo)
	<main class="grid flex-1 items-start gap-4 p-4 sm:px-6 sm:py-0 md:gap-8">
		<div class="uk-width-1-2@m uk-card uk-card-default">
			<div class="uk-card-body uk-flex uk-flex-column gap-4">
				@partials.ComputerHeader(p, agent, commonInfo)
				@ComputersNavbar(agent.ID, "monitors", agent.VncProxyPort, confirmDelete, commonInfo, agent.Os)
				if confirmDelete {
					@partials.ConfirmDeleteAgent(c, i18n.T(ctx, "agents.confirm_delete"), string(templ.URL(partials.GetNavigationUrl(commonInfo, "/computers"))), string(templ.URL(partials.GetNavigationUrl(commonInfo, fmt.Sprintf("/computers/%s", agent.ID)))))
				}
				<div class="uk-width-1-2@m uk-card uk-card-default">
					<div class="uk-card-header">
						<div class="flex items-center gap-2">
							<uk-icon hx-history="false" icon="monitor" custom-class="h-5 w-5" uk-cloack></uk-icon>
							<h3 class="uk-card-title">{ i18n.T(ctx, "inventory.monitor.title") }</h3>
						</div>
						<p class="uk-margin-small-top uk-text-small">
							{ i18n.T(ctx, "inventory.monitor.description") }
						</p>
					</div>
				</div>
				<div class="uk-card uk-card-body uk-card-default">
					if len(agent.Edges.Monitors) > 0 {
						<table class="uk-table uk-table-divider uk-table-small uk-table-striped -mt-4">
							<thead>
								<tr>
									<th>{ i18n.T(ctx, "inventory.monitor.manufacturer") }</th>
									<th>{ i18n.T(ctx, "inventory.monitor.model") }</th>
									<th>{ i18n.T(ctx, "inventory.monitor.serial") }</th>
									<th>{ i18n.T(ctx, "inventory.monitor.week_of_manufacture") }</th>
									<th>{ i18n.T(ctx, "inventory.monitor.year_of_manufacture") }</th>
								</tr>
							</thead>
							for _, monitor := range agent.Edges.Monitors {
								<tr>
									<td>{ monitor.Manufacturer }</td>
									if monitor.Model == "" {
										<td>-</td>
									} else {
										<td>{ monitor.Model }</td>
									}
									if monitor.Serial == "0" {
										<td>-</td>
									} else {
										<td>{ monitor.Serial }</td>
									}
									if monitor.WeekOfManufacture == "" {
										<td>-</td>
									} else {
										<td>{ monitor.WeekOfManufacture }</td>
									}
									if monitor.YearOfManufacture == "" {
										<td>-</td>
									} else {
										<td>{ monitor.YearOfManufacture }</td>
									}
								</tr>
							}
						</table>
					} else {
						<p class="uk-text-small uk-text-muted">
							{ i18n.T(ctx, "inventory.monitor.no_monitors") }
						</p>
					}
				</div>
			</div>
		</div>
	</main>
}

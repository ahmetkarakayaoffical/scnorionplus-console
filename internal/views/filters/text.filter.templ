package filters

import (
	"fmt"
	"github.com/invopop/ctxi18n/i18n"
	"github.com/labstack/echo/v4"
	"github.com/ahmetkarakayaoffical/scnorionplus-console/internal/views/partials"
	"strconv"
)

templ FilterByText(c echo.Context, p partials.PaginationAndSort, field, value, placeholder, target, swap string) {
	<button title={ i18n.T(ctx, placeholder) } type="button">
		if len(value) > 0 {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5 fill-red-500 text-red-500" uk-cloak></uk-icon>
		} else {
			<uk-icon icon="filter" hx-history="false" custom-class="mr-2 h-5 w-5" uk-cloak></uk-icon>
		}
	</button>
	<div class="uk-drop uk-dropdown" uk-dropdown="mode: click">
		<form class="flex flex-col pt-4 pl-4 pb-6 pr-8 gap-4">
			<input type="hidden" name="page" value="1"/>
			<input type="hidden" name="pageSize" value={ strconv.Itoa(p.PageSize) }/>
			<input type="hidden" name="sortBy" value={ p.SortBy }/>
			<input type="hidden" name="sortOrder" value={ p.SortOrder }/>
			<div class="flex-1 uk-inline mx-2 w-full">
				<span class="uk-form-icon">
					<uk-icon icon="filter" hx-history="false" custom-class="mr-2" uk-cloak></uk-icon>
				</span>
				<input
					class="uk-input"
					id={ fmt.Sprintf("filterBy%s", field) }
					name={ fmt.Sprintf("filterBy%s", field) }
					value={ value }
					placeholder={ i18n.T(ctx, placeholder) }
					spellcheck="false"
					aria-label={ i18n.T(ctx, placeholder) }
					_={ fmt.Sprintf(`
						on load 
							if my.value.length > 0 then
								set my.selectionStart to my.value.length
								set my.selectionEnd to my.value.length
							end
							set @size to %d
						end

						on keyup
							if #%s.value.length == 0 then
								put 1 into #page.value
							end
						then
					`,len(placeholder), fmt.Sprintf("filterBy%s", field)) }
				/>
			</div>
			<button
				type="button"
				class="uk-button uk-button-primary mx-2 w-full"
				hx-get={ GetPaginationUrl(c) }
				hx-push-url="true"
				hx-target={ target }
				hx-swap={ swap }
				hx-include="input[name^='filterBy']"
				_="on htmx:configRequest
					set event.detail.parameters['filterBySelectedItems'] to '0'
				end"
			>
				{ i18n.T(ctx, "Filter") }
			</button>
			@ClearFilter(c, fmt.Sprintf("filterBy%s", field), target, swap, func() bool {
				return len(value) == 0
			})
		</form>
	</div>
}
